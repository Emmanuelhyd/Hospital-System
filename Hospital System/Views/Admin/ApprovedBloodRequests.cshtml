@model IEnumerable<Hospital_System.Models.AdminModel>

@{
    Layout = "~/Views/Shared/_LayoutBlood.cshtml";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Approved Blood Requests</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/css/bootstrap.min.css" />

    <style>
        .btn-remove {
            display: inline-flex;
            align-items: center;
            text-decoration: none;
        }

            .btn-remove .btn-icon {
                margin-right: 4px;
            }

        .btn-remove {
            color: #007bff;
            font-size: 16px;
            padding: 5px 10px;
        }

            .btn-remove:hover {
                color: #0056b3;
                text-decoration: none;
            }

        .search-box {
            margin-bottom: 20px;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        #searchInput {
            height: 40px;
            font-size: 14px;
            color: black;
            padding: 10px;
            width: 80%;
            margin-left: -60px !important;
        }

        .highlight {
            background-color: yellow;
            font-weight: bold;
        }

        .error-message {
            color: red;
            font-weight: bold;
            margin-top: 10px;
            display: none;
        }

        .search-btn {
            color: #fff !important;
            background: #e74715 !important;
            background: -webkit-linear-gradient(to top, #d83d0c, #FF5722) !important;
            background: linear-gradient(to top, #d83d0c, #FF5722) !important;
            border-radius: 5px;
            padding: 8px 18px;
            font-size: 14px;
            cursor: pointer;
            transition: all 0.3s ease;
            margin-left: 80px !important;
            border: none;
        }

        .table-responsive table td {
            color: black !important;
        }

            .table-responsive table td:nth-child(5) {
                color: black !important;
            }
    </style>
</head>
<body>

    @using (Html.BeginForm("Admin", "ApprovedBloodRequests"))
    {
        <div class="sb2-2" style="margin-top:63px; height: 92%;">
            <div class="sb2-2-2">
                <ul>
                    <li>
                        <a href="/Admin/AdminHome"><i class="fa fa-home" aria-hidden="true"></i> Home</a>
                    </li>
                    <li class="active-bre">
                        <a href="/Admin/ApprovedBloodRequests"> Approved Blood Requests</a>
                    </li>
                    <li class="page-back">
                        <a href="javascript:void(0);" onclick="window.history.back();"><i class="fa fa-backward" aria-hidden="true"></i> Back</a>
                    </li>
                </ul>
            </div>
        </div>

        <div class="row">
            <div class="col-md-12" style="margin-top: -36%; width: 77%; margin-left: 21.5%">
                <div class="box-inn-sp">
                    <div class="inn-title">
                        <h4>Approved Blood Requests</h4>
                    </div>

                    <div class="tab-inn">
                        <div class="search-box">
                            <input type="text" id="searchInput" class="form-control" placeholder="Search by ID, name, email, or phone..." />
                            <button type="button" id="searchButton" class="btn btn-primary search-btn">Search</button>
                        </div>
                        <div id="emptySearchMessage" class="error-message">
                            Please enter a search term before searching.
                        </div>
                        <div id="noResultsMessage" class="error-message">
                            No results found for your search. Please try again with different criteria.
                        </div>

                        <!-- Message when model is empty -->
                        @if (!Model.Any())
                        {
                            <div class="alert alert-warning">No blood requests available.</div>
                        }
                        else
                        {
                            <div class="table-responsive table-desi">
                                <table class="table table-hover" id="donationTable">
                                    <thead>
                                        <tr>
                                            <th>ID</th>
                                            <th>ReferenceId</th>
                                            <th>First Name</th>
                                            <th>Last Name</th>
                                            <th>Email Id</th>
                                            <th>Phone Number</th>
                                            <th>Gender</th>
                                            <th>Blood Group</th>
                                            <th>Quantity</th>
                                            <th>Decease</th>
                                            <th>City</th>
                                            <th>State</th>
                                            <th>Country</th>
                                            <th>Status</th>
                                            <th>Actions</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var admin in Model)
                                        {
                                            <tr>
                                                <td>@Html.DisplayFor(m => admin.Id)</td>
                                                <td>@Html.DisplayFor(m => admin.ReferenceId)</td>
                                                <td>@Html.DisplayFor(m => admin.FirstName)</td>
                                                <td>@Html.DisplayFor(m => admin.LastName)</td>
                                                <td>@Html.DisplayFor(m => admin.EmailId)</td>
                                                <td>@Html.DisplayFor(m => admin.PhoneNumber)</td>
                                                <td>@Html.DisplayFor(m => admin.Gender)</td>
                                                <td>@Html.DisplayFor(m => admin.BloodGroup)</td>
                                                <td>@Html.DisplayFor(m => admin.Quantity)</td>
                                                <td>@Html.DisplayFor(m => admin.Decease)</td>
                                                <td>@Html.DisplayFor(m => admin.City)</td>
                                                <td>@Html.DisplayFor(m => admin.State)</td>
                                                <td>@Html.DisplayFor(m => admin.Country)</td>
                                                <td>@Html.DisplayFor(m => admin.IsApproved)</td>
                                                <td class="action-links">
                                                    <a href="@Url.Action("DRemove", "Admin", new { EmailId = admin.EmailId })"
                                                       class="btn-remove"
                                                       onclick="return confirm('Are you sure you want to remove this request?');">
                                                        <i class="fas fa-trash-alt" style="color: red; background: none; font-size: 20px;"></i>
                                                    </a>
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    }

    <script>
        // Function to filter table rows based on search input
        function searchTable(event) {
            const input = document.getElementById('searchInput');
            const filter = input.value.toLowerCase();
            const table = document.getElementById('donationTable');
            const rows = table.getElementsByTagName('tr');
            let noMatchFound = true;  // Flag to track if no match is found

            // Show error message if search input is empty
            const errorMessage = document.getElementById('emptySearchMessage');
            if (filter === '') {
                errorMessage.style.display = 'block'; // Show error message
                removeHighlights(); // Remove any existing highlights if the input is empty
                return; // Exit if input is empty
            } else {
                errorMessage.style.display = 'none'; // Hide error message
            }

            // Loop through all table rows (skipping the header)
            for (let i = 1; i < rows.length; i++) {
                const row = rows[i];
                const cells = row.getElementsByTagName('td');
                let rowContainsFilter = false;

                // Loop through each cell in the row to check if it matches the filter
                for (let j = 0; j < cells.length; j++) {
                    const cell = cells[j];
                    const cellText = cell.textContent.toLowerCase();

                    // If the cell contains the filter text, mark the row and highlight
                    if (cellText.includes(filter)) {
                        rowContainsFilter = true;

                        // Highlight matching text
                        const regex = new RegExp(filter, 'gi');
                        const originalText = cell.textContent;
                        const highlightedText = originalText.replace(regex, '<span class="highlight">$&</span>');

                        // Only modify the cell's content if it contains matched text
                        if (originalText !== highlightedText) {
                            cell.innerHTML = highlightedText;
                        }
                    }
                }

                // Show or hide the row based on whether it matches the filter
                row.style.display = rowContainsFilter ? '' : 'none';

                // If a row matches, set noMatchFound to false
                if (rowContainsFilter) {
                    noMatchFound = false;
                }
            }

            // If no rows match, show the error message
            const noResultsMessage = document.getElementById('noResultsMessage');
            if (noMatchFound) {
                noResultsMessage.style.display = 'block';  // Show message
            } else {
                noResultsMessage.style.display = 'none';  // Hide message
            }
        }

        // Function to remove highlights from table cells
        function removeHighlights() {
            const table = document.getElementById('donationTable');
            const rows = table.getElementsByTagName('tr');
            for (let i = 1; i < rows.length; i++) {
                const cells = rows[i].getElementsByTagName('td');
                for (let j = 0; j < cells.length; j++) {
                    cells[j].innerHTML = cells[j].textContent; // Reset cell content
                }
            }
        }

        // Attach the search function to the search input field
        document.getElementById('searchInput').addEventListener('input', searchTable);

        // Show error when clicking the search button with an empty input
        document.getElementById('searchButton').addEventListener('click', function () {
            const input = document.getElementById('searchInput');
            const filter = input.value.trim();
            const errorMessage = document.getElementById('emptySearchMessage');
            if (!filter) {
                errorMessage.style.display = 'block'; // Show error if empty
            }
        });

        // Hide error message when the user starts typing in the search input
        document.getElementById('searchInput').addEventListener('focus', function () {
            const errorMessage = document.getElementById('emptySearchMessage');
            errorMessage.style.display = 'none';
        });

        // Hide error message when the input is cleared
        document.getElementById('searchInput').addEventListener('input', function () {
            const errorMessage = document.getElementById('emptySearchMessage');
            if (!this.value) {
                errorMessage.style.display = 'none';
            }
        });
    </script>
</body>
</html>

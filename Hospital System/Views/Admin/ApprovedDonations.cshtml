@model IEnumerable<Hospital_System.Models.AdminModel>

@{
    Layout = "~/Views/Shared/_LayoutBlood.cshtml";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Approved Donations</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/css/bootstrap.min.css" />
    <style>
        .btn-remove {
            display: inline-flex;
            align-items: center;
            text-decoration: none;
        }

            .btn-remove .btn-icon {
                margin-right: 8px;
            }

        .btn-remove {
            color: #007bff;
            font-size: 16px;
            padding: 5px 10px;
        }

            .btn-remove:hover {
                color: #0056b3;
                text-decoration: none;
            }

        .search-box {
            margin-bottom: 20px;
            display: flex;
            align-items: center;
        }

        #searchInput {
            height: 40px;
            font-size: 14px;
            color: black;
            padding: 10px;
            width: 80%;
        }

        .highlight {
            background-color: yellow;
            font-weight: bold;
        }

        .error-message {
            color: red;
            font-weight: bold;
            margin-top: 10px;
            display: none; /* Hidden by default */
        }

        .searchButton {
            color: #fff !important;
            background: #e74715 !important;
            background: -webkit-linear-gradient(to top, #d83d0c, #FF5722) !important;
            background: linear-gradient(to top, #d83d0c, #FF5722) !important;
            border-radius: 5px;
            padding: 8px 18px;
            font-size: 14px;
            cursor: pointer;
            transition: all 0.3s ease;
            margin-left: 50px;
        }

        .pagination {
            justify-content: center;
            margin-top: 20px;
        }

            .pagination button {
                margin: 0 5px;
                padding: 5px 10px;
                border-radius: 5px;
            }

                .pagination button:hover {
                    background-color: darkslategray;
                    color: white;
                    cursor: pointer;
                }
    </style>
</head>
<body>
    @using (Html.BeginForm("Admin", "ApprovedDonations"))
    {
        <div class="sb2-2" style="margin-top:63px; height: 92%;">
            <div class="sb2-2-2">
                <ul>
                    <li>
                        <a href="/Admin/AdminHome"><i class="fa fa-home" aria-hidden="true"></i> Home</a>
                    </li>
                    <li class="active-bre">
                        <a href="/Admin/ApprovedDonations">Approved Donations</a>
                    </li>
                    <li class="page-back">
                        <a href="javascript:void(0);" onclick="window.history.back();"><i class="fa fa-backward" aria-hidden="true"></i> Back</a>
                    </li>
                </ul>
            </div>
        </div>

        <div class="row">
            <div class="col-md-12" style="margin-top: -36%; width: 77%; margin-left: 21.5%">
                <div class="box-inn-sp">
                    <div class="inn-title">
                        <h4>Approved Donation Requests</h4>
                    </div>

                    <div class="tab-inn">
                        <!-- Search Box -->
                        <div class="search-box">
                            <input type="text" id="searchInput" class="form-control" placeholder="Search by ID, name, email, or phone..." onkeyup="searchTable()" />
                            <button type="button" id="searchButton" class="btn searchButton" onclick="searchTable()">Search</button>
                        </div>
                        <!-- Error Message for Empty Input -->
                        <div id="errorMessage" class="error-message">
                            Please enter a search term before searching.
                        </div>
                        <!-- Error Message Display -->
                        <div id="noResultsMessage" class="error-message">
                            No results found for your search. Please try again with different criteria.
                        </div>

                        <div class="table-responsive table-desi">
                            <table class="table table-hover" id="donationsTable">
                                <thead>
                                    <tr>
                                        <th>ID</th>
                                        <th>ReferenceId</th>
                                        <th>First Name</th>
                                        <th>Last Name</th>
                                        <th>Email Id</th>
                                        <th>DateOfBirth</th>
                                        <th>Phone Number</th>
                                        <th>Gender</th>
                                        <th>Blood Group</th>
                                        <th>Quantity</th>
                                        <th>Decease</th>
                                        <th>City</th>
                                        <th>State</th>
                                        <th>Country</th>
                                        <th>Status</th>
                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                <tbody id="donationTableBody">
                                    @foreach (var admin in Model)
                                    {
                                        <tr>
                                            <td>@Html.DisplayFor(m => admin.Id)</td>
                                            <td>@Html.DisplayFor(m => admin.ReferenceId)</td>
                                            <td>@Html.DisplayFor(m => admin.FirstName)</td>
                                            <td>@Html.DisplayFor(m => admin.LastName)</td>
                                            <td>@Html.DisplayFor(m => admin.EmailId)</td>
                                            <td>@Html.DisplayFor(m => admin.DateOfBirth)</td>
                                            <td>@Html.DisplayFor(m => admin.PhoneNumber)</td>
                                            <td>@Html.DisplayFor(m => admin.Gender)</td>
                                            <td>@Html.DisplayFor(m => admin.BloodGroup)</td>
                                            <td>@Html.DisplayFor(m => admin.Quantity)</td>
                                            <td>@Html.DisplayFor(m => admin.Decease)</td>
                                            <td>@Html.DisplayFor(m => admin.City)</td>
                                            <td>@Html.DisplayFor(m => admin.State)</td>
                                            <td>@Html.DisplayFor(m => admin.Country)</td>
                                            <td>@Html.DisplayFor(m => admin.IsApproved)</td>

                                            <td class="action-links">
                                                <a href="@Url.Action("ERemove", "Admin", new { EmailId = admin.EmailId })"
                                                   class="btn-remove"
                                                   onclick="return confirm('Are you sure you want to remove this donor?');">
                                                    <i class="fas fa-trash-alt" style="color: red; background: none; font-size: 20px;"></i>
                                                </a>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>

                        <div id="pagination" class="pagination">
                            <!-- Pagination buttons will be inserted here -->
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }

    <script>
        let currentPage = 1;
        const rowsPerPage =1;  // You can adjust this to show more/less rows per page
        let filteredRows = [];

        function searchTable() {
            const input = document.getElementById('searchInput');
            const filter = input.value.toLowerCase();
            const table = document.getElementById('donationsTable');
            const rows = table.getElementsByTagName('tr');
            const noResultsMessage = document.getElementById('noResultsMessage');
            let noMatchFound = true;

            // Show error message if search input is empty
            if (filter === '') {
                removeHighlights(); // Remove any existing highlights if the input is empty
                filteredRows = Array.from(rows).slice(1); // Keep all rows visible if no search term
                paginate();
                noResultsMessage.style.display = 'none';
                return;
            }

            // Filter rows based on search input
            filteredRows = Array.from(rows).slice(1).filter(row => {
                const cells = row.getElementsByTagName('td');
                return Array.from(cells).some(cell => {
                    return cell.textContent.toLowerCase().includes(filter);
                });
            });

            if (filteredRows.length === 0) {
                noResultsMessage.style.display = 'block';
            } else {
                noResultsMessage.style.display = 'none';
            }

            // Highlight matching text
            highlightSearchResults(filter);
            paginate();
        }

        // Function to highlight search terms
        function highlightSearchResults(searchTerm) {
            const table = document.getElementById('donationsTable');
            const rows = table.getElementsByTagName('tr');

            Array.from(rows).forEach(row => {
                const cells = row.getElementsByTagName('td');
                Array.from(cells).forEach(cell => {
                    const originalText = cell.textContent;
                    const regex = new RegExp(searchTerm, 'gi');
                    const highlightedText = originalText.replace(regex, match => `<span class="highlight">${match}</span>`);
                    cell.innerHTML = highlightedText;
                });
            });
        }

        // Function to remove highlights from the table
        function removeHighlights() {
            const table = document.getElementById('donationsTable');
            const rows = table.getElementsByTagName('tr');
            Array.from(rows).forEach(row => {
                const cells = row.getElementsByTagName('td');
                Array.from(cells).forEach(cell => {
                    const originalText = cell.textContent;
                    cell.innerHTML = originalText;
                });
            });
        }

        // Pagination function
        function paginate() {
            const table = document.getElementById('donationsTable');
            const rows = filteredRows.length ? filteredRows : Array.from(table.getElementsByTagName('tr')).slice(1); // Filtered rows or all rows
            const totalRows = rows.length;
            const totalPages = Math.ceil(totalRows / rowsPerPage);

            // Hide all rows first
            rows.forEach(row => row.style.display = 'none');

            // Display only rows for current page
            const startRow = (currentPage - 1) * rowsPerPage;
            const endRow = Math.min(currentPage * rowsPerPage, totalRows);

            for (let i = startRow; i < endRow; i++) {
                rows[i].style.display = '';
            }

            // Create pagination buttons
            const paginationContainer = document.getElementById('pagination');
            paginationContainer.innerHTML = ''; // Clear existing pagination buttons

            // Previous button
            if (currentPage > 1) {
                const prevButton = document.createElement('button');
                prevButton.className = 'btn btn-secondary';
                prevButton.innerHTML = 'Previous';
                prevButton.onclick = () => {
                    currentPage--;
                    paginate();
                };
                paginationContainer.appendChild(prevButton);
            }

            // Page number buttons
            for (let page = 1; page <= totalPages; page++) {
                const pageButton = document.createElement('button');
                pageButton.className = 'btn btn-secondary';
                pageButton.innerHTML = page;
                pageButton.onclick = () => {
                    currentPage = page;
                    paginate();
                };
                paginationContainer.appendChild(pageButton);
            }

            // Next button
            if (currentPage < totalPages) {
                const nextButton = document.createElement('button');
                nextButton.className = 'btn btn-secondary';
                nextButton.innerHTML = 'Next';
                nextButton.onclick = () => {
                    currentPage++;
                    paginate();
                };
                paginationContainer.appendChild(nextButton);
            }
        }

        // Initialize pagination on page load
        window.onload = paginate;
    </script>
</body>
</html>

@model IEnumerable<Hospital_System.Models.AdminModel>

@{
    Layout = "~/Views/Shared/_LayoutBlood.cshtml";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Donation Requests</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/css/bootstrap.min.css" />
    <script src="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/js/all.min.js"></script>
    <style>
        .search-box {
            margin-bottom: 20px;
        }

        #searchInput {
            height: 40px;
            font-size: 14px;
            color: black;
            padding: 10px;
            width: 80%;
            background-color: #f0f0f0;
            border-radius: 5px;
        }

        .highlight {
            background-color: yellow;
            font-weight: bold;
        }

        .error-message {
            color: red;
            font-weight: bold;
            margin-top: 10px;
            display: none; /* Hidden by default */
        }

        .searchButton {
            color: #fff !important;
            background: #e74715 !important;
            background: -webkit-linear-gradient(to top, #d83d0c, #FF5722) !important;
            background: linear-gradient(to top, #d83d0c, #FF5722) !important;
            border-radius: 5px;
            padding: 0px 18px;
            font-size: 14px;
            cursor: pointer;
            transition: all 0.3s ease;
            margin-left: 50px !important;
        }

        .table-responsive {
            width: 100%;
            overflow-x: auto;
        }

        .action-links {
            font-size: 14px;
        }

            .action-links a {
                text-decoration: none;
                color: #007bff;
                margin-right: 10px;
            }

                .action-links a:hover {
                    text-decoration: underline;
                }

        .no-results {
            color: red;
            margin-top: 10px;
            font-weight: bold;
            display: none;
        }

        .table-responsive table td {
            color: black !important;
        }

            .table-responsive table td:nth-child(5) {
                color: black !important;
            }
    </style>
</head>
<body>

    @using (Html.BeginForm("Admin", "DonationRequests"))
    {
        <div class="sb2-2" style="margin-top:2%; height: 92%;">
            <div class="sb2-2-2">
                <ul>
                    <li>
                        <a href="/Admin/AdminHome"><i class="fa fa-home" aria-hidden="true"></i> Home</a>
                    </li>
                    <li class="active-bre">
                        <a href="/Admin/DonationRequests"> Donation Requests</a>
                    </li>
                    <li class="page-back">
                        <a href="javascript:void(0);" onclick="window.history.back();"><i class="fa fa-backward" aria-hidden="true"></i> Back</a>
                    </li>
                </ul>
            </div>
        </div>

        <div class="row">
            <div class="col-md-12" style="margin-top:-36%; width: 77%; margin-left:21.5%">
                <div class="box-inn-sp">
                    <div class="inn-title">
                        <h4>Donation Requests</h4>
                    </div>

                    <div class="tab-inn">
                        <!-- Search Box -->
                        <div class="search-box d-flex">
                            <input type="text" id="searchInput" class="form-control" placeholder="Search by ID, name, email, or phone..." onkeyup="searchTable()" />
                            <button type="button" id="searchButton" class="btn ms-2 searchButton" onclick="searchTable()">Search</button>
                        </div>

                        <!-- Error Message for Empty Input -->
                        <div id="errorMessage" class="error-message">
                            Please enter a search term before searching.
                        </div>

                        <div class="table-responsive table-desi">
                            <table class="table table-hover" id="donationTable">
                                <thead>
                                    <tr>
                                        <th>ID</th>
                                        <th>Reference Id</th>
                                        <th>First Name</th>
                                        <th>Last Name</th>
                                        <th>Email Id</th>
                                        <th>DateOfBirth</th>
                                        <th>Phone Number</th>
                                        <th>Gender</th>
                                        <th>Blood Group</th>
                                        <th>Quantity</th>
                                        <th>Decease</th>
                                        <th>City</th>
                                        <th>State</th>
                                        <th>Country</th>
                                        <th>IsApproved</th>
                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                <tbody id="donationTableBody">
                                    @foreach (var admin in Model)
                                    {
                                        <tr>
                                            <td>@Html.DisplayFor(m => admin.Id)</td>
                                            <td>@Html.DisplayFor(m => admin.ReferenceId)</td>
                                            <td>@Html.DisplayFor(m => admin.FirstName)</td>
                                            <td>@Html.DisplayFor(m => admin.LastName)</td>
                                            <td>@Html.DisplayFor(m => admin.EmailId)</td>
                                            <td>@Html.DisplayFor(m => admin.DateOfBirth)</td>
                                            <td>@Html.DisplayFor(m => admin.PhoneNumber)</td>
                                            <td>@Html.DisplayFor(m => admin.Gender)</td>
                                            <td>@Html.DisplayFor(m => admin.BloodGroup)</td>
                                            <td>@Html.DisplayFor(m => admin.Quantity)</td>
                                            <td>@Html.DisplayFor(m => admin.Decease)</td>
                                            <td>@Html.DisplayFor(m => admin.City)</td>
                                            <td>@Html.DisplayFor(m => admin.State)</td>
                                            <td>@Html.DisplayFor(m => admin.Country)</td>
                                            <td>@Html.DisplayFor(m => admin.IsApproved)</td>
                                            <td class="action-links">
                                                <a href="@Url.Action("LEdit", new { EmailId = admin.EmailId })" class="btn-edit" aria-label="Edit user">
                                                    <i class="fas fa-edit" style="color:blue;background:none;font-size:20px;"></i>
                                                </a>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>

                        <!-- No Results Message -->
                        <div id="noResultsMessage" class="no-results">
                            No results found matching your search criteria.
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
</body>
</html>
<script>
    // Function to filter table rows based on search input
    function searchTable(event) {
        const input = document.getElementById('searchInput');
        const filter = input.value.toLowerCase();
        const table = document.getElementById('donationTable'); // Corrected to match the table id
        const rows = table.getElementsByTagName('tr');
        let noMatchFound = true;  // Flag to track if no match is found

        // Show error message if search input is empty
        const errorMessage = document.getElementById('errorMessage');
        if (filter === '') {
            errorMessage.style.display = 'block'; // Show error message
            removeHighlights(); // Remove any existing highlights if the input is empty
            return; // Exit if input is empty
        } else {
            errorMessage.style.display = 'none'; // Hide error message
        }

        // Loop through all table rows (skipping the header)
        for (let i = 1; i < rows.length; i++) {
            const row = rows[i];
            const cells = row.getElementsByTagName('td');
            let rowContainsFilter = false;

            // Loop through each cell in the row to check if it matches the filter
            for (let j = 0; j < cells.length; j++) {
                const cell = cells[j];
                const cellText = cell.textContent.toLowerCase();

                // If the cell contains the filter text, mark the row and highlight
                if (cellText.includes(filter)) {
                    rowContainsFilter = true;

                    // Highlight matching text
                    const regex = new RegExp(filter, 'gi');
                    const originalText = cell.textContent;
                    const highlightedText = originalText.replace(regex, '<span class="highlight">$&</span>');

                    // Only modify the cell's content if it contains matched text
                    if (originalText !== highlightedText) {
                        cell.innerHTML = highlightedText;
                    }
                }
            }

            // Show or hide the row based on whether it matches the filter
            row.style.display = rowContainsFilter ? '' : 'none';

            // If a row matches, set noMatchFound to false
            if (rowContainsFilter) {
                noMatchFound = false;
            }
        }

        // If no rows match, show the error message
        const noResultsMessage = document.getElementById('noResultsMessage');
        if (noMatchFound) {
            noResultsMessage.style.display = 'block';  // Show message
        } else {
            noResultsMessage.style.display = 'none';  // Hide message
        }
    }

    // Function to remove highlights (restore original text content)
    function removeHighlights() {
        const table = document.getElementById('donationTable');
        const rows = table.getElementsByTagName('tr');

        // Loop through all table rows (skipping the header)
        for (let i = 1; i < rows.length; i++) {
            const row = rows[i];
            const cells = row.getElementsByTagName('td');

            // Loop through each cell and remove any <span> tags with highlights
            for (let j = 0; j < cells.length; j++) {
                const cell = cells[j];
                const originalText = cell.textContent; // Get the original text without highlights
                cell.innerHTML = originalText; // Replace with the unmodified text
            }
        }
    }

    // Add an event listener to trigger search on 'Enter' key press
    document.getElementById('searchInput').addEventListener('keypress', function (e) {
        if (e.key === 'Enter') {
            searchTable(e); // Trigger the search when 'Enter' is pressed
        }
    });

    // Add event listener to hide the error message when the input box is focused (clicked)
    document.getElementById('searchInput').addEventListener('focus', function () {
        const errorMessage = document.getElementById('errorMessage');
        errorMessage.style.display = 'none'; // Hide the error message when input is focused
    });

    // Add event listener to show the error message only if input is empty when clicking the search button
    document.getElementById('searchButton').addEventListener('click', function () {
        const input = document.getElementById('searchInput');
        const filter = input.value.trim();
        const errorMessage = document.getElementById('errorMessage');

        // Show error message if input is empty when the search button is clicked
        if (filter === '') {
            errorMessage.style.display = 'block';
        }
    });
</script>

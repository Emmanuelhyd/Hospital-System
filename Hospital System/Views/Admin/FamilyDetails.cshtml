@model IEnumerable<Hospital_System.Models.AdminModel>

@{

    Layout = "~/Views/Shared/_LayoutBlood.cshtml";
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - Blood Bank Management System</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/css/bootstrap.min.css" />
    <style>
        body {
            background-color: #f7f7f7;
            margin: 0;
        }

        .content {
            padding: 20px;
            width: 90%;
            max-width: 1200px;
            margin: 20px auto;
            background-color: #fff;
            border-radius: 8px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
            position: relative;
        }

        .action-links {
            display: flex;
            justify-content: flex-start;
            gap: 10px;
        }

        .btn-edit, .btn-delete {
            padding: 5px 10px;
            border-radius: 5px;
            color: white;
            border: none;
            cursor: pointer;
            text-decoration: none;
            display: flex;
            align-items: center;
        }

        .btn-edit {
            background-color: #4c8cff;
        }

            .btn-edit:hover {
                background-color: #007bff;
            }

        .btn-delete {
            background-color: #ff6f61;
        }

            .btn-delete:hover {
                background-color: #e63946;
            }

        .btn-icon {
            margin-right: 5px;
        }

        .back-button {
            position: absolute;
            top: 10px;
            left: 10px;
            background-color: blue;
            color: white;
            padding: 5px 10px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
        }

            .back-button:hover {
                background-color: darkblue;
            }

        .table-responsive {
            width: 100%;
            overflow-x: auto;
        }

        .search-container {
            display: flex;
            justify-content: center;
            margin-bottom: 20px;
            gap: 10px;
        }

        .search-input {
            padding: 10px;
            width: 60%;
            border: 1px solid #ccc;
            border-radius: 5px;
        }

        .search-button {
            padding: 10px 15px;
            border-radius: 5px;
            border: none;
            background-color: #007bff;
            color: white;
            cursor: pointer;
        }

            .search-button:hover {
                background-color: #0056b3;
            }

        .highlight {
            background-color: yellow;
            color: black;
        }

        .alert {
            color: red;
            display: none;
            text-align: center;
        }

        .print-button {
            background-color: red;
            color: white;
            padding: 5px 10px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            margin-top: 20px;
        }

            .print-button:hover {
                background-color: darkred;
            }

        /* Ensuring buttons are on the same line */
        .action-links a {
            display: inline-flex;
            margin-right: 10px;
        }
    </style>
</head>
<body>
    <div class="content">
        <button class="back-button" onclick="window.history.back()">Back</button>
        <h1 class="text-center">@ViewData["Title"]</h1>
        <h2 class="text-center">Family Details</h2>
        <div class="search-container">
            <input type="text" id="searchInput" class="search-input" placeholder="Search by ID, name, email, or phone..." onkeyup="searchRequests()" />
            <button class="search-button" onclick="searchRequests()">Search</button>
        </div>
        <div id="searchAlert" class="alert">Please enter a keyword to search.</div>

        <div class="table-responsive">
            @if (Model != null && Model.Any())
            {
                <table class="table table-bordered table-striped" id="donationsTable">
                    <thead>
                        <tr>
                            <th>Reference Id</th>
                            <th>Name</th>
                            <th>Phone Number</th>
                            <th>Email Id</th>
                            <th>Gender</th>
                            <th>RelationWithDonor</th>
                            <th>StreetAddress</th>
                            <th>City</th>
                            <th>State</th>
                            <th>ZipCode</th>
                            <th>Country</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var admin in Model)
                        {
                            <tr>
                                <td>@Html.DisplayFor(m => admin.ReferenceId)</td>
                                <td>@Html.DisplayFor(m => admin.Name)</td>
                                <td>@Html.DisplayFor(m => admin.PhoneNumber)</td>
                                <td>@Html.DisplayFor(m => admin.EmailId)</td>
                                <td>@Html.DisplayFor(m => admin.Gender)</td>
                                <td>@Html.DisplayFor(m => admin.RelationWithDonor)</td>
                                <td>@Html.DisplayFor(m => admin.StreetAddress)</td>
                                <td>@Html.DisplayFor(m => admin.City)</td>
                                <td>@Html.DisplayFor(m => admin.State)</td>
                                <td>@Html.DisplayFor(m => admin.ZipCode)</td>
                                <td>@Html.DisplayFor(m => admin.Country)</td>
                                <td class="action-links">
                                    <a href="@Url.Action("REdit", new { EmailId = admin.EmailId })" class="btn-edit" aria-label="Edit user">
                                        <i class="fas fa-edit btn-icon"></i>Edit
                                    </a>
                                    <a href="@Url.Action("BDelete", new { EmailId = admin.EmailId })" class="btn-delete"
                                       onclick="return confirm('Are you sure you want to delete this item?');" aria-label="Delete user">
                                        <i class="fas fa-trash btn-icon"></i>Delete
                                    </a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
            else
            {
                <div class="text-center">No requests found.</div>
            }
        </div>

        <div class="text-center mt-4">
            <button class="print-button" onclick="window.print()">Print</button>
        </div>
    </div>

    <script>
        function searchRequests() {
            const input = document.getElementById('searchInput');
            const filter = input.value.toLowerCase();
            const table = document.getElementById('donationsTable'); // Corrected table ID
            const rows = table.getElementsByTagName('tr');
            const alert = document.getElementById('searchAlert');

            // Show/hide alert based on input
            if (!filter) {
                alert.style.display = 'block';
            } else {
                alert.style.display = 'none';
            }

            for (let i = 1; i < rows.length; i++) {
                const cells = rows[i].getElementsByTagName('td');
                let rowContainsFilter = false;

                for (let j = 0; j < cells.length; j++) {
                    const cell = cells[j];
                    const cellText = cell.textContent.toLowerCase();

                    // Only process non-button or non-link cells
                    if (cellText.includes(filter)) {
                        rowContainsFilter = true;

                        // Skip highlighting for buttons and links
                        if (cell.querySelector('a') || cell.querySelector('button')) {
                            continue;
                        }

                        // Highlight matching text
                        const regex = new RegExp(filter, 'gi');
                        cell.innerHTML = cell.textContent.replace(regex, '<span class="highlight">$&</span>');
                    } else {
                        // Restore the original text
                        if (cell.querySelector('a') || cell.querySelector('button')) {
                            continue; // Skip cells containing links or buttons
                        }
                        cell.innerHTML = cell.textContent; // Restore original text
                    }
                }

                // Show or hide the row based on filter
                rows[i].style.display = rowContainsFilter ? '' : 'none';
            }
        }
    </script>
</body>
</html>

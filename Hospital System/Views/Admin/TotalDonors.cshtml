@model IEnumerable<Hospital_System.Models.AdminModel>

@{
    Layout = "~/Views/Shared/_LayoutBlood.cshtml";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Total Donors</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/css/bootstrap.min.css" />

    <style>
        .search-box {
            margin-bottom: 20px;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        #searchInput {
            height: 40px;
            font-size: 14px;
            color: black;
            padding: 10px;
            width: 80%;
            margin-left: -60px !important;
        }

        .highlight {
            background-color: yellow;
            font-weight: bold;
        }

        .error-message {
            color: red;
            font-weight: bold;
            margin-top: 10px;
            display: none;
        }

        .search-btn {
            color: #fff !important;
            background: #e74715 !important;
            background: -webkit-linear-gradient(to top, #d83d0c, #FF5722) !important;
            background: linear-gradient(to top, #d83d0c, #FF5722) !important;
            border-radius: 5px;
            padding: 8px 18px;
            font-size: 14px;
            cursor: pointer;
            transition: all 0.3s ease;
            margin-left: 80px !important;
            border: none;
        }

        .table-responsive table td {
            color: black !important;
        }

            .table-responsive table td:nth-child(5) {
                color: black !important;
            }
    </style>
</head>
<body>

    @using (Html.BeginForm("Admin", "TotalDonors"))
    {

        <div class="sb2-2" style="margin-top:63px; height: 92%;">
            <div class="sb2-2-2">
                <ul>
                    <li>
                        <a href="/Admin/AdminHome"><i class="fa fa-home" aria-hidden="true"></i> Home</a>
                    </li>
                    <li class="active-bre">
                        <a href="/Admin/TotalDonors"> Total Donors</a>
                    </li>
                    <li class="page-back">
                        <a href="javascript:void(0);" onclick="window.history.back();"><i class="fa fa-backward" aria-hidden="true"></i> Back</a>
                    </li>
                </ul>
            </div>
        </div>

        <div class="row">
            <div class="col-md-12" style="margin-top: -36%; width: 77%; margin-left: 21.5%">
                <div class="box-inn-sp">
                    <div class="inn-title">
                        <h4>Total Donors</h4>
                    </div>

                    <div class="tab-inn">
                        <!-- Search Box and Button -->
                        <div class="search-box">
                            <input type="text" id="searchInput" class="form-control" placeholder="Search by ID, name, email, or phone..." onkeyup="searchTable()" />
                            <button type="button" class="btn btn-primary search-btn" onclick="searchTable()">Search</button>
                        </div>

                        <!-- Error Message for Empty Search -->
                        <div id="emptySearchMessage" class="error-message">
                            Please enter a search term before searching.
                        </div>

                        <!-- No Results Message -->
                        <div id="noResultsMessage" class="error-message">
                            No results found for your search. Please try again with different criteria.
                        </div>

                        <div class="table-responsive table-desi">
                            <table class="table table-hover" id="donationTable">
                                <thead>
                                    <tr>
                                        <th>ID</th>
                                        <th>First Name</th>
                                        <th>Last Name</th>
                                        <th>Email Id</th>
                                        <th>DateOfBirth</th>
                                        <th>Phone Number</th>
                                        <th>Gender</th>
                                        <th>Blood Group</th>
                                        <th>Quantity</th>
                                        <th>Decease</th>
                                        <th>City</th>
                                        <th>State</th>
                                        <th>Country</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var admin in Model)
                                    {
                                        <tr>
                                            <td>@Html.DisplayFor(m => admin.Id)</td>
                                            <td>@Html.DisplayFor(m => admin.FirstName)</td>
                                            <td>@Html.DisplayFor(m => admin.LastName)</td>
                                            <td>@Html.DisplayFor(m => admin.EmailId)</td>
                                            <td>@Html.DisplayFor(m => admin.DateOfBirth)</td>
                                            <td>@Html.DisplayFor(m => admin.PhoneNumber)</td>
                                            <td>@Html.DisplayFor(m => admin.Gender)</td>
                                            <td>@Html.DisplayFor(m => admin.BloodGroup)</td>
                                            <td>@Html.DisplayFor(m => admin.Quantity)</td>
                                            <td>@Html.DisplayFor(m => admin.Decease)</td>
                                            <td>@Html.DisplayFor(m => admin.City)</td>
                                            <td>@Html.DisplayFor(m => admin.State)</td>
                                            <td>@Html.DisplayFor(m => admin.Country)</td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
    <script>
        // Function to filter table rows based on search input
        function searchTable() {
            const input = document.getElementById('searchInput');
            const filter = input.value.toLowerCase();
            const table = document.getElementById('donationTable');
            const rows = table.getElementsByTagName('tr');
            let noMatchFound = true;  // Flag to track if no match is found

            const errorMessage = document.getElementById('emptySearchMessage');
            const noResultsMessage = document.getElementById('noResultsMessage');

            // Show error message if search input is empty
            if (filter === '') {
                errorMessage.style.display = 'block'; // Show error message
                noResultsMessage.style.display = 'none'; // Hide no results message
                removeHighlights(); // Remove any existing highlights if the input is empty
                return; // Exit if input is empty
            } else {
                errorMessage.style.display = 'none'; // Hide error message
            }

            // Loop through all table rows (skipping the header)
            for (let i = 1; i < rows.length; i++) {
                const row = rows[i];
                const cells = row.getElementsByTagName('td');
                let rowContainsFilter = false;

                // Loop through each cell in the row to check if it matches the filter
                for (let j = 0; j < cells.length; j++) {
                    const cell = cells[j];
                    const cellText = cell.textContent.toLowerCase();

                    // If the cell contains the filter text, mark the row and highlight
                    if (cellText.includes(filter)) {
                        rowContainsFilter = true;

                        // Highlight matching text
                        const regex = new RegExp(filter, 'gi');
                        const originalText = cell.textContent;
                        const highlightedText = originalText.replace(regex, '<span class="highlight">$&</span>');

                        // Only modify the cell's content if it contains matched text
                        if (originalText !== highlightedText) {
                            cell.innerHTML = highlightedText;
                        }
                    }
                }

                // Show or hide the row based on whether it matches the filter
                row.style.display = rowContainsFilter ? '' : 'none';

                // If a row matches, set noMatchFound to false
                if (rowContainsFilter) {
                    noMatchFound = false;
                }
            }

            // If no rows match, show the error message
            if (noMatchFound) {
                noResultsMessage.style.display = 'block';  // Show message
            } else {
                noResultsMessage.style.display = 'none';  // Hide message
            }
        }

        // Function to remove highlights (restore original text content)
        function removeHighlights() {
            const table = document.getElementById('donationTable');
            const rows = table.getElementsByTagName('tr');

            // Loop through all table rows (skipping the header)
            for (let i = 1; i < rows.length; i++) {
                const row = rows[i];
                const cells = row.getElementsByTagName('td');

                // Loop through each cell and remove any <span> tags with highlights
                for (let j = 0; j < cells.length; j++) {
                    const cell = cells[j];
                    const originalText = cell.textContent; // Get the original text without highlights
                    cell.innerHTML = originalText; // Replace with the unmodified text
                }
            }
        }

        // Add event listener to input for focusing and clearing errors
        document.getElementById('searchInput').addEventListener('focus', function () {
            document.getElementById('emptySearchMessage').style.display = 'none'; // Remove error message when focused
        });

        // Clear error message when input value is removed
        document.getElementById('searchInput').addEventListener('input', function () {
            if (this.value === '') {
                document.getElementById('emptySearchMessage').style.display = 'none'; // Hide error message if input is cleared
            }
        });

        // Add an event listener to trigger search on 'Enter' key press
        document.getElementById('searchInput').addEventListener('keypress', function (e) {
            if (e.key === 'Enter') {
                searchTable(); // Trigger the search when 'Enter' is pressed
            }
        });
    </script>
</body>
</html>

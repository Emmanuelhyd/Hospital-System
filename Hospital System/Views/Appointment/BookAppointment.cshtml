@model Hospital_System.Models.MAppointment

@{
    ViewBag.Title = "Book Appointment";
    Layout = "~/Views/Shared/_PatientLayout.cshtml";
}

<head>
    <link rel="stylesheet" type="text/css" href="~/Content/styles.css">
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f8f9fa; /* Light background for contrast */
        }

        .form-container {
           /* background-color: white;*/
            padding: 45px;
            margin-top: -48px;
            width: 60%;
            max-width: 900px;
            margin-left: 262px;
            position: absolute;
        }

        h3 {
            text-align: center; /* Center the header */
            color: #333; /* Darker color for contrast */
        }

        .form-group {
            margin-bottom: 5px;  Space between form groups 
        }

            .form-group label {
                margin-left: 80px;
                position: absolute;
                margin-top: 8px;
                font-weight: bold;
            }
            

        .form-control {
            width: 60%; /* Full width for input fields */
            padding: 10px; /* Padding for input fields */
            border: 1px solid #ced4da; /* Border for input fields */
            border-radius: 5px; /* Rounded corners for input fields */
            box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.1); /* Inner shadow */
            margin-left: 236px;
        }


        .form-control1 {
            width: 63%;
            padding: 10px;
            border: 1px solid #ced4da;
            border-radius: 5px;
            box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.1);
            margin-left: 236px;
        }


      

            .form-control:focus {
                border-color: #80bdff; /* Change border color on focus */
                outline: none; /* Remove outline */
                box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25); /* Blue shadow on focus */
            }

        .text-danger {
            font-size: 0.875em;
            margin-top: 5px;
            margin-left: 249px;
            color: red;
            font-weight: 600;
        }

        /*.form-buttons {
            text-align: center;*/ /* Center buttons */
        /*}*/

        .btn {
            padding: 10px 20px; /* Padding for buttons */
            border: none; /* Remove border */
            border-radius: 5px; /* Rounded corners for buttons */
            cursor: pointer; /* Pointer cursor for buttons */
        }

        .btn-primary {
            background-color: #007bff;
            color: white;
            width: 115px;
            height: 49px;
            padding-left: 28px;
            margin-left: 282px;
            
        }

        .btn-secondary {
            width: 115px;
            height: 48px;
            padding-left: 37px;
        }

        .btn-primary:hover {
            background-color: #0056b3; 
        }

        .btn-secondary:hover {
            background-color: #5a6268;
        }
       
    </style>
</head>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
<div class="form-container">
    <h3>Book Your Appointment Here</h3>
    <div style=" color: red; margin-left: 303px; font-weight: 600;">
        @TempData["Message"]
    </div>

    @Html.ValidationSummary(true, "", new { @class = "text-danger" }) 

<div>
    <div class="form-group">
        @Html.LabelFor(m => m.PatientName)
       
        @Html.TextBoxFor(m => m.PatientName, new { @class = "form-control", placeholder = "Enter Patient Name" })<br />
        @Html.ValidationMessageFor(m => m.PatientName, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.PatientType)
        @Html.DropDownListFor(m => m.PatientType, Model.PatientTypes, "Select Patient Type", new { @class = "form-control1" })<br />
        @Html.ValidationMessageFor(m => m.PatientType, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Problem)
        @Html.DropDownListFor(m => m.Problem, Model.Getproblems, "Select Problem", new { @class = "form-control1" })<br />
        @Html.ValidationMessageFor(m => m.Problem, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.PhoneNumber)
        @Html.TextBoxFor(m => m.PhoneNumber, new { @class = "form-control", placeholder = "Enter Phone Number" })<br />
        @Html.ValidationMessageFor(m => m.PhoneNumber, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Address)
        @Html.TextBoxFor(m => m.Address, new { @class = "form-control", placeholder = "Enter Address" })<br />
        @Html.ValidationMessageFor(m => m.Address, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Date)
        @Html.TextBoxFor(m => m.Date, new { @class = "form-control", type = "date" })<br />
        @Html.ValidationMessageFor(m => m.Date, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Time)
        @Html.TextBoxFor(m => m.Time, new { @class = "form-control", type = "time" })<br />
        @Html.ValidationMessageFor(m => m.Time, "", new { @class = "text-danger" })
    </div>


    <div class="form-group">
        @Html.LabelFor(m => m.Description)
       @Html.TextAreaFor(m=>m.Description,new {@class="form-control",placeholder="Describe"})<br />
        @Html.ValidationMessageFor(m => m.Description, "", new { @class = "text-danger" })
    </div>
    <div>
        <input type="submit" value="Submit" class="btn btn-primary">
        <input type="button" value="Back" class="btn btn-secondary" onclick="window.location.href='@Url.Action("AppointmentList", "Appointment")'">
    </div>
</div>
</div>

}

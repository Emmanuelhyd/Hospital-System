@model Hospital_System.Models.AttendanceDo

@{
    ViewBag.Title = "Add Attendance";
    Layout = null;
}

<style>
    /* General Body Styles */
    body {
        display: flex;
        justify-content: center;
        align-items: center;
        height: 100vh;
        margin: 0;
        background-color: #f5f5f5;
    }

    /* Form Container */
    .form-container {
        display: flex;
        flex-direction: column; /* Stack rows vertically */
        max-width: 800px;  /* Maximum form width */
        width: 100%;
        padding: 20px;
        border: 1px solid #ccc;
        border-radius: 8px;
        background-color: #fff;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        margin: 20px;
    }

    /* Row Style: each row will be a flex container */
    .form-row {
        display: flex;
        justify-content: space-between; /* Aligns the items side by side */
        margin-bottom: 20px;
    }

    /* Form Field Style: each field takes up 48% of the row's width */
    .form-row .form-group {
        width: 48%; /* 2 fields per row */
        box-sizing: border-box;
    }

    /* Label Styling */
    .form-container label {
        display: block;
        font-weight: bold;
        margin-bottom: 8px;
    }

    /* Input field styling */
    .form-container input[type="text"],
    .form-container select,
    .form-container input[type="time"] {
        width: 100%;  /* Full width of each field */
        padding: 10px;
        border: 1px solid #ccc;
        border-radius: 5px;
        font-size: 14px;
        background-color: #f9f9f9;
    }

    /* Submit Button Styling */
    .form-container input[type="submit"] {
        width: 100%;  /* Full width for submit button */
        padding: 12px;
        background-color: #007bff;
        color: white;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        font-size: 16px;
        transition: background-color 0.3s ease;
    }

    /* Hover Effect on Submit Button */
    .form-container input[type="submit"]:hover {
        background-color: #0056b3;
    }

    /* Media Query for Smaller Screens */
    media (max-width: 768px) {
        .form-row {
            flex-direction: column;  /* Stack form fields vertically on small screens */
        }

        .form-row .form-group {
            width: 100%;  /* Full width for form fields on smaller screens */
        }

        .form-container input[type="submit"] {
            width: 100%;  /* Ensure submit button is full width on small screens */
        }
    }


    .form1 {
        width: 100%;
        height: 41px;
        border-radius: 5px;
    }
</style>

@using (Html.BeginForm("AddAttendance", "AttendanceAdmin", FormMethod.Post, new { @class = "form-container" }))
{
    <div>
        <h2 style="text-align: center; width: 100%; margin-bottom: 20px;">Add Attendance Here</h2>

        <!-- Row 1: Id and Name -->
        <div class="form-row">
            <div class="form-group">
                <!-- Id Field -->
                @Html.LabelFor(m => m.Id)
                @Html.TextBoxFor(m => m.Id)
            </div>

            <div class="form-group">
                <!-- Name Field -->
                @Html.LabelFor(m => m.Name)
                @Html.TextBoxFor(m => m.Name, new { @required = "required", @placeholder = "Name" })
            </div>
        </div>

        <!-- Row 2: Department and Job Title -->
        <div class="form-row">
            <div class="form-group">
                <!-- Department Field -->
                @Html.LabelFor(m => m.Department)
                @Html.TextBoxFor(m => m.Department, new { @required = "required", @placeholder = "Department" })
            </div>

            <div class="form-group">
                <!-- Job Title Field -->
                @Html.LabelFor(m => m.JobTitle)
                @Html.TextBoxFor(m => m.JobTitle, new { @required = "required", @placeholder = "Job Title" })
            </div>
        </div>

        <!-- Row 3: Contact and Shift -->
        <div class="form-row">
            <div class="form-group">
                <!-- Contact Field -->
                @Html.LabelFor(m => m.Contact)
                @Html.TextBoxFor(m => m.Contact, new
           {
               @required = "required",
               @placeholder = "Phone Number",
               @type = "tel",
               @maxlength = "10",
               @pattern = "^[6789][0-9]{9}$",  // Pattern to ensure it starts with 6, 7, 8, or 9 and is exactly 10 digits
               @title = "Phone number must start with 6, 7, 8, or 9 and must be 10 digits long.",
               @class = "form1"
                })
            </div>

            <div class="form-group">
                <!-- Shift Dropdown -->
                @Html.LabelFor(m => m.Shift)
                @Html.DropDownListFor(m => m.Shift, new SelectList(new List<SelectListItem>
                {
                    new SelectListItem { Value = "Morning", Text = "Morning" },
                    new SelectListItem { Value = "Afternoon", Text = "Afternoon" },
                    new SelectListItem { Value = "Night", Text = "Night" },
                }, "Value", "Text"), "Select Shift", new { @class = "form-control", id = "shiftDropdown" })
            </div>
        </div>

        <!-- Row 4: Time, Login Time, and Logout Time -->
        <div class="form-row">
            <div class="form-group">
                <!-- Time Field -->
                @Html.LabelFor(m => m.Time)
                @Html.TextBoxFor(m => m.Time, new { @required = "required", @type = "text", @id = "timeField", @readonly = "readonly" })
            </div>

            <div class="form-group">
                <!-- Login Time Field -->
                @Html.LabelFor(m => m.LoginTime)
                @Html.TextBoxFor(m => m.LoginTime, new { @required = "required", @type = "time" })
            </div>
        </div>

        <!-- Row 5: Logout Time and Status -->
        <div class="form-row">
            <div class="form-group">
                <!-- Logout Time Field -->
                @Html.LabelFor(m => m.LogoutTime)
                @Html.TextBoxFor(m => m.LogoutTime, new { @required = "required", @type = "time" })
            </div>

            <div class="form-group">
                <!-- Status Dropdown -->
                @Html.LabelFor(m => m.Status)
                @Html.DropDownListFor(m => m.Status, new SelectList(new List<SelectListItem>
                {
                    new SelectListItem { Value = "Present", Text = "Present" },
                    new SelectListItem { Value = "Absent", Text = "Absent" },
                }, "Value", "Text"), "Select Status", new { @class = "form-control" })
            </div>
        </div>

        <!-- Submit Button -->
        <div>
            <input type="submit" value="Submit" />
        </div>
    </div>
}

<script>
    // JavaScript to dynamically set Time field based on Shift selection
    document.getElementById("shiftDropdown").addEventListener("change", function () {
        var shift = this.value;
        var timeField = document.getElementById("timeField");

        if (shift === "Morning") {
            timeField.value = "9:00 AM - 5:00 PM";
        } else if (shift === "Afternoon") {
            timeField.value = "3:00 PM - 11:00 PM";
        } else if (shift === "Night") {
            timeField.value = "10:00 PM - 6:00 AM";
        } else {
            timeField.value = ""; // Clear if no shift selected
        }
    });

    // Trigger change event on page load in case a default shift is already selected
    window.onload = function () {
        var shift = document.getElementById("shiftDropdown").value;
        document.getElementById("shiftDropdown").dispatchEvent(new Event("change"));
    };
</script>

@model Hospital_System.Models.HospPatient

@{
    ViewBag.Title = "AddPatients";
    Layout = null;
}

<style>

  

    .form-container {
        width: 65%;
        margin: 30px auto;
        padding: 20px;
        /*border-radius: 8px;*/
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        background-color: #ffffff;
        margin-top: -25px;
    }

    .form-row {
        display: flex;
        flex-wrap: wrap;
        gap: 20px;
    }

    .form-group {
        flex: 1;
        min-width: 250px;
        margin-bottom: 20px;
    }

        .form-group label {
            font-weight: bold;
            margin-bottom: 5px;
            display: block;
        }

    .form-control {
        width: 100%;
        padding: 10px;
        border: 1px solid #ccc;
        border-radius: 4px;
        box-sizing: border-box;
        height: 42px;
    }

        .form-control:focus {
            border-color: #007bff;
            outline: none;
            box-shadow: 0 0 5px rgba(0, 123, 255, .6);
        }

    .btn-primary {
        background-color: #007bff;
        border: none;
        color: white;
        padding: 10px 15px;
        border-radius: 4px;
        cursor: pointer;
        width: 100%;
    }

        .btn-primary:hover {
            background-color: #0056b3;
        }

    .text-danger {
        color: #dc3545;
    }

    .validation-summary {
        margin-bottom: 15px;
        color: #dc3545;
    }

    .btn {
        color: white;
        background-color: #e74715;
        border: none;
        border-radius: 5px;
        padding: 10px 15px;
        cursor: pointer;
        display: flex;
        align-items: center;
        justify-content: center;
        width: 30%;
    }

        .btn:hover {
            background-color: #e74715;
        }
</style>

@*<div style="padding: 14px 36px; background: #002147; margin-top: 28px; margin-left: 215px; width: 62%; color: white;">
    <h4>Book Your Appointment</h4>
</div>*@


@using (Html.BeginForm("AddPatient", "Outpatient"))
{<div>
    <div style="padding: 14px 36px; background: #002147; margin-top: 28px; margin-left: 215px; width: 833px; color: white;">
        <h4>Book Your Appointment</h4>

    </div>

    <div class="form-container">

        <div class=" form-row">
            <div class="form-group">
                @Html.LabelFor(m => m.Id)
                @Html.TextBoxFor(m => m.Id, new { @class = "form-control" })
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.PatientName)
                @Html.TextBoxFor(m => m.PatientName, new { @required = "required", @placeholder = "Patient Name", @class = "form-control" })
            </div>
        </div>

        <div class=" form-row">
            <div class="form-group">
                @Html.LabelFor(m => m.Problem)
                @Html.TextBoxFor(m => m.Problem, new { @required = "required", @placeholder = "Problem", @class = "form-control" })
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.Description)
                @Html.TextBoxFor(m => m.Description, new { @required = "required", @placeholder = "Description", @class = "form-control" })
            </div>
        </div>

        <div class=" form-row">
            <div class="form-group">
                @Html.LabelFor(m => m.Gender)
                @Html.DropDownListFor(m => m.Gender, new SelectList(new List<SelectListItem>
    {
               new SelectListItem { Value = "Male", Text = "Male" },
               new SelectListItem { Value = "Female", Text = "Female" },
                new SelectListItem { Value = "Others", Text = "Others" },

           }, "Value", "Text"), "Select Gender", new { @class = "form-control" })
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.Address)
                @Html.TextBoxFor(m => m.Address, new { @required = "required", @placeholder = "Address", @class = "form-control" })
            </div>
        </div>

        <div class=" form-row">
            <div class="form-group">
                @Html.LabelFor(m => m.PhoneNumber)
                @Html.TextBoxFor(m => m.PhoneNumber, new
           {
               @class = "form-control",
               @required = "required",
               @placeholder = "Phone Number",
               @pattern = @"^[6789]\d{9}$", // Regex pattern for validation
               @title = "Enter a valid 10-digit phone number starting with 6, 7, 8, or 9."
           })
                @Html.ValidationMessageFor(m => m.PhoneNumber, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.Date)
                @Html.TextBoxFor(m => m.Date, new { @required = "required", @id = "AppointmentDate", @placeholder = "Appointment Date", @type = "date", @class = "form-control" })
            </div>
        </div>

        <div class=" form-row">
            <div class="form-group">
                @Html.LabelFor(m => m.AdmissionDate)
                @Html.TextBoxFor(m => m.AdmissionDate, new { @id = "AdmissionDate", @placeholder = "Admission Date", @type = "date", @class = "form-control" })
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.DischargeDate)
                @Html.TextBoxFor(m => m.DischargeDate, new { @id = "DischargeDate", @placeholder = "Discharge Date", @type = "date", @class = "form-control" })
            </div>
        </div>

        <div class=" form-row">
            <div class="form-group">
                @Html.LabelFor(m => m.TreatmentDuration)
                @Html.TextBoxFor(m => m.TreatmentDuration, new { @id = "TreatmentDuration", @placeholder = "Treatment Duration", @readonly = "readonly", @class = "form-control" })
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.PatientType)
                @Html.TextBoxFor(m => m.PatientType, new { @id = "PatientType", @placeholder = "Patient Type", @readonly = "readonly", @class = "form-control" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(m => m.Status)
            @Html.DropDownListFor(m => m.Status, new SelectList(new List<SelectListItem>
{

           new SelectListItem { Value = "intreatment", Text = "InTreatment" },
           new SelectListItem { Value = "discharged", Text = "Discharged" },
            new SelectListItem { Value = "notadmitted", Text = "NotAdmitted" },
            new SelectListItem { Value = "died", Text = "Died" },

       }, "Value", "Text"), "Select Status", new { @class = "form-control" })
        </div>

        <div class="form-row">
            <input type="submit" value="Submit" class="btn" style="margin-left: 298px;">
        </div>

    </div>
</div>

}

<script>
    document.getElementById('AdmissionDate').addEventListener('change', calculateTreatmentDuration);
    document.getElementById('DischargeDate').addEventListener('change', calculateTreatmentDuration);

    function calculateTreatmentDuration() {
        const admissionDateInput = document.getElementById('AdmissionDate').value;
        const dischargeDateInput = document.getElementById('DischargeDate').value;

        if (admissionDateInput && dischargeDateInput) {
            const admissionDate = new Date(admissionDateInput);
            const dischargeDate = new Date(dischargeDateInput);
            const timeDifference = dischargeDate - admissionDate;

            if (timeDifference >= 0) { // Ensure discharge is after admission
                const durationDays = Math.ceil(timeDifference / (1000 * 3600 * 24)); // Convert milliseconds to days
                document.getElementById('TreatmentDuration').value = durationDays;

                // Determine patient type
                document.getElementById('PatientType').value = durationDays === 0 ? "Out Patient" : "In Patient";
            } else {
                document.getElementById('TreatmentDuration').value = "N/A"; // Handle invalid case
                document.getElementById('PatientType').value = ""; // Clear patient type
            }
        } else {
            // If both dates are cleared
            if (!admissionDateInput && !dischargeDateInput) {
                document.getElementById('TreatmentDuration').value = 0; // Set TreatmentDuration to 0
                document.getElementById('PatientType').value = "Out Patient"; // Set PatientType to Out Patient

            } else {
                document.getElementById('TreatmentDuration').value = ""; // Clear if dates are not set
                document.getElementById('PatientType').value = ""; // Clear patient type
            }
        }
    }
</script>





@model Hospital_System.Viewmodel.Allview
@{
    ViewBag.Title = "Change Password";
    Layout = "~/Views/Shared/_LayoutPatientPage1.cshtml";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <title>@ViewBag.Title</title>
    <style>
        /* Styling the container for the form */
        .container1 {
            width: 70%;
            padding: 20px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
            margin: auto;
            background: white;
            margin-top: 1px;
        }

        h2 {
            color: white;
            text-align: center;
            margin-bottom: 30px;
        }

        .form-group {
            margin-bottom: 20px;
            position: relative;
        }

            .form-group label {
                display: block;
                font-weight: bold;
                margin-bottom: 5px;
                color: Black;
            }

            /* Updated styles for text and password input boxes */
            .form-group input[type="text"],
            .form-group input[type="password"] {
                width: 100%;
                padding: 12px;
                border: 1px solid honeydew;
                border-radius: 8px;
                box-sizing: border-box;
                background-color: #f9f9f9;
                font-size: 1.5rem;
                transition: border-color 0.3s, box-shadow 0.3s;
            }

                .form-group input[type="text"]:focus,
                .form-group input[type="password"]:focus {
                    border-color: #0056b3; /* Change border color on focus */
                    box-shadow: 0 0 5px rgba(0, 123, 255, 0.5); /* Subtle shadow effect */
                    outline: none; /* Remove default outline */
                }

            /* Error message style */
            .form-group .text-danger {
                color: #d78484;
                font-size: 0.875rem;
                margin-top: 5px;
            }

        .btn-submit {
            width: 100%;
            padding: 12px;
            font-size: 1.1rem;
            color: #fff;
            background-color: #007bff;
            border: none;
            border-radius: 8px;
            cursor: pointer;
            transition: background-color 0.3s;
        }

            .btn-submit:hover {
                background-color: #0056b3;
            }

        .password-icon {
            position: absolute;
            right: 10px;
            top: 55%;
            cursor: pointer;
            color: #007bff;
        }

        .btn-back {
            color: white;
            background-color: dodgerblue;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            padding: 10px;
            width: 100%;
            margin-top: 10px;
            display: flex;
            align-items: center;
            justify-content: center;
        }

            .btn-back i {
                margin-right: 5px;
            }

        /* Popup message styles */
        .message-popup {
            display: none;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            background-color: #fff;
            border-radius: 5px;
            padding: 20px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);
            z-index: 9999;
            max-width: 400px;
            width: 100%;
            text-align: center;
        }

        .message-success {
            background-color: #d4edda;
            color: #155724;
            border: 1px solid #c3e6cb;
        }

        .message-error {
            background-color: #f8d7da;
            color: #721c24;
            border: 1px solid #f5c6cb;
        }

        .message-popup i {
            font-size: 30px;
            margin-bottom: 10px;
        }

            .message-popup i.success {
                color: #28a745;
                font-size: 35px;
            }

            .message-popup i.error {
                color: #dc3545;
                font-size: 35px;
            }

        .message-popup span {
            font-size: 1.2rem;
            font-weight: bold;
        }
    </style>

    <script>
        // Function to toggle password visibility
        function togglePasswordVisibility(id) {
            const passwordInput = document.getElementById(id);
            const type = passwordInput.getAttribute('type') === 'password' ? 'text' : 'password';
            passwordInput.setAttribute('type', type);
        }

        // Form validation on submit
        document.addEventListener('DOMContentLoaded', function () {
            document.querySelector('form').addEventListener('submit', function (e) {
                const password = document.getElementById('Password').value;
                const confirmPassword = document.getElementById('ConfirmPassword').value;

                if (password !== confirmPassword) {
                    e.preventDefault(); // Prevent form submission
                    alert("Passwords do not match. Please try again.");
                }
            });
        });

        // Function to redirect to Dashboard
        function Back() {
            window.location.href = "/Patient/Dashboard";
        }

        // Function to display the popup message
        function showMessage(message, isSuccess, redirectUrl) {
            const messagePopup = document.getElementById('messagePopup');
            const messageContainer = document.getElementById('messageContainer');
            const icon = document.getElementById('messageIcon');

            const symbol = isSuccess ? '✅' : '❌';
            messageContainer.innerHTML = `<span>${symbol} ${message}</span>`;

            icon.classList.remove('success', 'error');
            icon.classList.add(isSuccess ? 'success' : 'error');

            messagePopup.classList.remove('message-success', 'message-error');
            messagePopup.classList.add(isSuccess ? 'message-success' : 'message-error');

            messagePopup.style.display = 'block'; // Show the popup

            // Delay the redirect after 3 seconds
            setTimeout(function() {
                window.location.href = redirectUrl;
            }, 3000); // 3 seconds delay for reading the message
        }

        // Show message on page load if TempData has a value
        document.addEventListener('DOMContentLoaded', function () {
            const tempValid = '@TempData["valid"]'.trim();
            if (tempValid) {
                const isSuccess = tempValid.includes("success");
                const redirectUrl = isSuccess ? '/Patient/Dashboard' : '/Patient/ChangePassword';
                showMessage(tempValid, isSuccess, redirectUrl);
            }
        });
    </script>
</head>
<body>
    <div class="sb2-2" style="margin-top: 58px; height: 120%;">
        <div class="sb2-2-2">
            <ul>
                <li>
                    <a href="/Patient/Dashboard"><i class="fa fa-home" aria-hidden="true"></i> Home</a>
                </li>
                <li class="active-bre">
                    <a href="#"> Password</a>
                </li>
                <li class="page-back">
                    <a href="/Patient/Dashboard"><i class="fa fa-backward" aria-hidden="true"></i> Back</a>
                </li>
            </ul>
        </div>

        <div style="padding: 14px 36px; background: #002147; margin-top: 25px; margin-left: 150px; width: 70%; color: white;">
            <h4>Change Your Password</h4>
        </div>

        <div class="container1">
            @using (Html.BeginForm("ChangePassword", "Patient", FormMethod.Post))
            {
                @Html.AntiForgeryToken()

                <div class="form-group">
                    @Html.LabelFor(m => m.Patients.UserName)
                    @Html.TextBoxFor(m => m.Patients.UserName, new { @placeholder = "Username", @class = "form-control", @readonly = "readonly" })
                    @Html.ValidationMessageFor(m => m.Patients.UserName, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(m => m.Patients.Password, "New Password")
                    @Html.PasswordFor(m => m.Patients.Password, new { @placeholder = "Password", @class = "form-control", @required = "required", @pattern = "(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}", @title = "Password must be at least 8 characters long, include an uppercase letter, a number, and a special character." })
                    @Html.ValidationMessageFor(m => m.Patients.Password, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(m => m.Patients.ConfirmPassword, "Confirm Password")
                    @Html.PasswordFor(m => m.Patients.ConfirmPassword, new { @placeholder = "Confirm Password", @class = "form-control", @required = "required", @pattern = "(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}", @title = "Password must be at least 8 characters long, include an uppercase letter, a number, and a special character." })
                    @Html.ValidationMessageFor(m => m.Patients.ConfirmPassword, "", new { @class = "text-danger" })
                </div>

                <input type="submit" value="Change Password" class="btn-submit" style="width:50%; margin-left:190px;" />
            }
        </div>
    </div>

    <!-- Popup message container -->
    <div id="messagePopup" class="message-popup">
        <i id="messageIcon" class="fas"></i> <!-- Icon for success or error -->
        <div id="messageContainer"></div> <!-- The message text -->
    </div>

</body>
</html>

@model Hospital_System.Dash.DashboardDetails

@{
    ViewBag.Title = "Add Schedule Advertisement";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

@using (Html.BeginForm("AddSheduleAd", "SheduleAd"))
{
    <div style="position: relative; width: 85%; margin: 18px auto; background-color: white; padding: 20px; border-radius: 8px;">
        <h2 style="text-align: center;">Add Schedule Advertisement</h2>

        <div style="display: flex; flex-direction: column; align-items: center;">
            <!-- Form Row 1: Two fields in one row -->
            <div class="form-row">
                <div class="form-group">
                    <label>Id</label>
                    @Html.TextBoxFor(m => m.MShedule.Id, new { @class = "form-control", @readonly = "readonly" }) <!-- Readonly for Id -->
                </div>

                <div class="form-group">
                    <label>Doctor Name</label>
                    @Html.TextBoxFor(m => m.MShedule.DoctorName, new { @required = "required", @placeholder = "Enter Doctor Name", @class = "form-control" })
                </div>
            </div>

            <!-- Form Row 2: Two fields in one row -->
            <div class="form-row">
                <div class="form-group">
                    <label>Start Time</label>
                    @Html.TextBoxFor(m => m.MShedule.StartTime, new { @required = "required", @placeholder = "Enter Start Time", @type = "time", @class = "form-control" })
                </div>

                <div class="form-group">
                    <label>End Time</label>
                    @Html.TextBoxFor(m => m.MShedule.EndTime, new { @required = "required", @placeholder = "Enter End Time", @type = "time", @class = "form-control" })
                </div>
            </div>

            <!-- Form Row 3: Single field -->
            <div class="form-row">
                <div class="form-group">
                    <label>Status</label>
                    @Html.DropDownListFor(m => m.MShedule.status, new SelectList(new List<SelectListItem>
                    {
                        new SelectListItem { Value = "Active", Text = "Active" },
                        new SelectListItem { Value = "Inactive", Text = "Inactive" },
                    }, "Value", "Text"), "Select Status", new { @class = "form-control",@required="required" })
                </div>
            </div>

            <!-- Submit and Back Buttons -->
            <div style="display: flex; justify-content: center; margin-top: 20px;">
                <input type="submit" value="Submit" style="margin-right: 10px;">
                <button type="button" onclick="window.location.href='/Dashboard/DashboardView'" style="background-color: #007BFF; color: white; padding: 10px 15px; border: none; border-radius: 4px; cursor: pointer; transition: background-color 0.3s;">Back</button>
            </div>
        </div>
    </div>
}

<script>
    // Optional: Back button functionality
    function Back() {
        window.location.href = "/Dashboard/DashboardView";
    }
</script>

<style>
    /* General form styling */
    label {
        font-weight: bold;
        margin-bottom: 5px;
        display: block;
    }

    /* Flexbox for rows */
    .form-row {
        display: flex;
        justify-content: space-between;
        width: 100%;
        gap: 15px;
        margin-bottom: 20px;
    }

    /* Form group inside each row */
    .form-group {
        flex: 1 1 45%; /* Each field takes up 45% of the row (leaving space for gap) */
        margin-bottom: 15px;
        box-sizing: border-box;
    }

    /* Styling for textboxes and dropdowns */
    .form-control {
        width: 100%;
        padding: 10px;
        border: 1px solid #ccc;
        border-radius: 4px;
        box-sizing: border-box;
    }

    /* Submit button styling */
    input[type="submit"],
    button {
        background-color: #4CAF50;
        color: white;
        padding: 10px 15px;
        border: none;
        border-radius: 4px;
        cursor: pointer;
        transition: background-color 0.3s;
    }

    input[type="submit"]:hover,
    button:hover {
        background-color: #45a049;
    }

    /* Mobile responsiveness: Stack fields vertically if the screen width is small */
    media (max-width: 768px) {
        .form-group {
            flex: 1 1 100%; /* Stack items vertically on small screens */
        }
    }
</style>

@model Hospital_System.Models.UserModel

@{
    ViewBag.Title = "Relative Information";
    Layout = "~/Views/Shared/_UserLayoutBlood.cshtml";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Relative Information</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/css/bootstrap.min.css" />
    <style>

        .form-container {
            background: white;
            border-radius: 10px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
            padding: 30px;
            margin-top: -50%;
            margin-left: 25%;
            max-width: 65%;
            position: relative;
            font-family: 'Arial', sans-serif;
        }
            .form-container label {
                color: black;
                font-size: 16px;
            }

            .form-container input::placeholder {
                color: black;
                font-size: 12px;
            }

            .form-container select {
                color: black;
                font-size: 12px;
                padding: 8px 12px;
                border-radius: 5px;
                border: 1px solid #ccc;
                background-color: #fff;
            }

                .form-container select option {
                    color: black;
                    font-size: 12px;
                    background-color: #fff;
                }

        h2 {
            color: #343a40;
            margin-bottom: 20px;
            text-align: center;
        }

        .error-message {
            color: red;
            font-size: 0.85rem;
        }

        .btn-primary {
            background-color: #007bff;
            border: none;
            line-height: 25px;
        }

            .btn-primary:hover {
                background-color: #0056b3;
            }

        .btn-submit {
            width: 11%;
            margin-left: 400px;
        }

        .back-button {
            color: #fff;
            background: #e74715;
            background: -webkit-linear-gradient(to top, #d83d0c, #FF5722);
            background: linear-gradient(to top, #d83d0c, #FF5722);
            padding: 4px 34px;
            line-height: 24px;
            border-radius: 3px;
            text-transform: uppercase;
            font-size: 10px;
            border: none !important;
            outline: none !important;
            margin-top: 20px;
            width: 11% !important;
        }

         
    </style>
</head>
<body>

    <div class="form-container">
       

        @using (Html.BeginForm("RelativeInfo", "User", FormMethod.Post, new { id = "relativeInfo" }))
        {
            <div class="text-center" style="padding: 17px 40px; background: #002147; border-radius:5px; margin-top: -80px; margin-left: -30px; width: 100%; color: white; position: absolute;">
                <h4>Relative Info</h4>
            </div>


            <div class="mb-3 row">
                <div class="col-md-6">
                    @Html.LabelFor(m => m.ReferenceId, new { @class = "form-label" })
                    @Html.TextBoxFor(m => m.ReferenceId, new { @class = "form-control", @readonly = "readonly" })
                </div>
                <div class="col-md-6">
                    @Html.LabelFor(m => m.Name, new { @class = "form-label" })
                    @Html.TextBoxFor(m => m.Name, new { @class = "form-control", placeholder = "Enter Name", required = "required", aria_required = "true" })
                </div>
            </div>

            <div class="mb-3 row">
                <div class="col-md-6">
                    @Html.LabelFor(m => m.RelationWithDonor, new { @class = "form-label" })
                    @Html.DropDownList("RelationWithDonor", new SelectList(new List<SelectListItem>
                    {
                        new SelectListItem { Value = "Father", Text = "Father" },
                        new SelectListItem { Value = "Mother", Text = "Mother" },
                        new SelectListItem { Value = "Brother", Text = "Brother" },
                        new SelectListItem { Value = "Sister", Text = "Sister" },
                        new SelectListItem { Value = "Spouse", Text = "Spouse" },
                        new SelectListItem { Value = "Friend", Text = "Friend" },
                        new SelectListItem { Value = "Relative", Text = "Relative" },
                        new SelectListItem { Value = "Colleague", Text = "Colleague" },
                        new SelectListItem { Value = "Other", Text = "Other" }
                    }, "Value", "Text"), "Select Relation with Donor", new { @class = "form-select", required = "required", aria_required = "true" })
                </div>
                <div class="col-md-6">
                    @Html.LabelFor(m => m.EmailId, new { @class = "form-label" })
                    @Html.TextBoxFor(m => m.EmailId, new
                    {
                        @class = "form-control",
                        placeholder = "Enter Email",
                        type = "email",
                        required = "required",
                        pattern = "^[a-zA-Z0-9._%+-]+@gmail\\.[a-zA-Z]{2,}$",
                        title = "Please enter a valid Gmail address ending with @gmail. (e.g., example@gmail.com, user123@gmail.in)"
                    })
                </div>
            </div>

            <div class="mb-3 row">
                <div class="col-md-6">
                    @Html.LabelFor(m => m.PhoneNumber, new { @class = "form-label" })
                    @Html.TextBoxFor(m => m.PhoneNumber, new { @class = "form-control", placeholder = "Enter Phone Number", required = "required", pattern = @"\d{10}", maxlength = "10", title = "Phone number must be exactly 10 digits" })
                </div>
                <div class="col-md-6">
                    @Html.Label("Gender", new { @class = "form-label" })
                    @Html.DropDownList("Gender", new SelectList(new List<SelectListItem>
                    {
                        new SelectListItem { Value = "Male", Text = "Male" },
                        new SelectListItem { Value = "Female", Text = "Female" },
                        new SelectListItem { Value = "Other", Text = "Other" }
                    }, "Value", "Text"), "Select Gender", new { @class = "form-select", required = "required", aria_required = "true" })
                </div>
            </div>

            <div class="row mb-3">
                <div class="col-md-6">
                    @Html.LabelFor(m => m.Country, new { @class = "form-label" })
                    @Html.DropDownList("Country", new SelectList(new List<SelectListItem>
                    {
                        new SelectListItem { Value = "India", Text = "India" }
                    }, "Value", "Text"), "Select Country", new { @class = "form-select", required = "required", aria_required = "true", id = "countryDropdown" })
                </div>
                <div class="col-md-6">
                    @Html.LabelFor(m => m.State, new { @class = "form-label" })
                    @Html.DropDownList("State", new SelectList(Enumerable.Empty<SelectListItem>()), "Select State", new { @class = "form-select", required = "required", aria_required = "true", id = "stateDropdown" })
                </div>
            </div>

            <div class="row mb-3">

                <div class="col-md-6">
                    @Html.LabelFor(m => m.City, new { @class = "form-label" })
                    @Html.DropDownList("City", new SelectList(Enumerable.Empty<SelectListItem>()), "Select City", new { @class = "form-select", required = "required", aria_required = "true", id = "cityDropdown" })
                </div>
                <div class="col-md-6">
                    @Html.LabelFor(m => m.ZipCode, new { @class = "form-label" })
                    @Html.TextBoxFor(m => m.ZipCode, new { @class = "form-control", placeholder = "Enter Zip Code", required = "required", maxlength = "6", pattern = "^[1-9][0-9]{5}$", title = "Zip code must be a 6 digit number." })
                </div>
            </div>

            <div class="row mb-3">
                <div class="col-md-6">
                    @Html.LabelFor(m => m.StreetAddress, new { @class = "form-label" })
                    @Html.TextBoxFor(m => m.StreetAddress, new { @class = "form-control", placeholder = "Enter Street Address", required = "required", aria_required = "true" })
                </div>
            </div>

            <div class="text-center">
                <button class="back-button" onclick="window.history.back()">Back</button>

                <button type="submit" class="btn btn-primary btn-submit">Submit</button>
            </div>
        }
    </div>


   

    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>
    <script>
        $(document).ready(function () {
            flatpickr("#datepicker", {
                dateFormat: "d-m-Y",
                maxDate: "today"
            });

            var countryData = {
                "India": {
                    "states": [
                        "Andhra Pradesh", "Maharashtra", "Karnataka", "Tamil Nadu"
                    ],
                    "cities": {
                        "Andhra Pradesh": ["Visakhapatnam", "Vijayawada", "Guntur"],
                        "Maharashtra": ["Mumbai", "Pune", "Nagpur"],
                        "Karnataka": ["Bengaluru", "Mysuru", "Hubli"],
                        "Tamil Nadu": ["Chennai", "Coimbatore", "Madurai"]
                    },
                    "districts": {
                        "Andhra Pradesh": ["Visakhapatnam", "Vijayawada", "Guntur"],
                        "Maharashtra": ["Mumbai", "Pune", "Nagpur"],
                        "Karnataka": ["Bengaluru", "Mysuru", "Hubli"],
                        "Tamil Nadu": ["Chennai", "Coimbatore", "Madurai"]
                    },
                    "zipCodes": {
                        "Andhra Pradesh": {
                            "Visakhapatnam": "530001",
                            "Vijayawada": "520001",
                            "Guntur": "522001"
                        },
                        "Maharashtra": {
                            "Mumbai": "400001",
                            "Pune": "411001",
                            "Nagpur": "440001"
                        },
                        "Karnataka": {
                            "Bengaluru": "560001",
                            "Mysuru": "570001",
                            "Hubli": "580001"
                        },
                        "Tamil Nadu": {
                            "Chennai": "600001",
                            "Coimbatore": "641001",
                            "Madurai": "625001"
                        }
                    }
                }
            };

            $('#countryDropdown').change(function () {
                var selectedCountry = $(this).val();

                if (selectedCountry === "India") {
                    var states = countryData["India"].states;
                    var $stateDropdown = $('#stateDropdown');
                    $stateDropdown.empty();
                    $stateDropdown.append('<option value="">Select State</option>');

                    $.each(states, function (index, state) {
                        $stateDropdown.append('<option value="' + state + '">' + state + '</option>');
                    });

                    $('#cityDropdown').empty().append('<option value="">Select City</option>');
                    $('#ZipCode').val('');
                }
            });

            $('#stateDropdown').change(function () {
                var selectedState = $(this).val();
                var selectedCountry = $('#countryDropdown').val();

                if (selectedCountry === "India" && selectedState) {
                    var cities = countryData["India"].cities[selectedState] || [];
                    var $cityDropdown = $('#cityDropdown');
                    $cityDropdown.empty();
                    $cityDropdown.append('<option value="">Select City</option>');

                    $.each(cities, function (index, city) {
                        $cityDropdown.append('<option value="' + city + '">' + city + '</option>');
                    });

                    $('#ZipCode').val('');
                } else {
                    $('#cityDropdown').empty().append('<option value="">Select City</option>');
                    $('#ZipCode').val('');
                }
            });

            $('#cityDropdown').change(function () {
                var selectedState = $('#stateDropdown').val();
                var selectedCity = $(this).val();
                var selectedCountry = $('#countryDropdown').val();

                if (selectedCountry === "India" && selectedState && selectedCity) {
                    var zipCode = countryData["India"].zipCodes[selectedState][selectedCity];
                    $('#ZipCode').val(zipCode);  // Populate the zip code field
                } else {
                    $('#ZipCode').val('');
                }
            });
        });



        $(document).ready(function () {
    // Initialize the datepicker
    flatpickr("#datepicker", {
        dateFormat: "d-m-Y",
        maxDate: "today"
    });

    // Submit the form via AJAX
            $('#relativeInfo').submit(function (e) {
        e.preventDefault(); // Prevent the default form submission

        var formData = $(this).serialize(); // Serialize the form data

        $.ajax({
            url: '@Url.Action("relativeInfo", "User")', // The action URL to submit the form
            type: 'POST',
            data: formData,
            success: function (response) {
                // Assuming the response contains the UserId, show the success modal
                $('#userId').text(response.UserId); // Display the user ID in the modal
                $('#successModal').modal('show'); // Show the modal

                // Optionally clear the form or redirect the user
                $('#relativeInfo')[0].reset(); // Reset the form after successful submission
            },
            error: function () {
                alert('Error in form submission. Please try again.');
            }
        });
    });
});


    </script>
</body>
</html>
